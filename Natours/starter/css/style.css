/*Universal reset*/
*,
*::after,
*::before {
  /*Good to also include the pseudoelements*/
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*Allows every element to inherit the box sizing property that we set in the body*/ }

html {
  font-size: 62.5%;
  /*Make this relative to the default browser size*/ }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  /*1.7 times bigger than the predefined font*/
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

/*Header*/
.header {
  height: 95vh;
  /*95% of the viewport's height*/
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }

/*Logo*/
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
  /*these parameters are going off of the parent element, which is the header.*/ }

.header__logo {
  height: 3.5rem;
  /*width will be auto fixed by the browser*/ }

/*Main Heading title*/
.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /*Shifts 50% of the element horizontally and vertically*/
  text-align: center;
  /*Centers the button*/ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation: moveInLeft 2s ease-out; }

.heading-primary--secondary {
  display: block;
  font-size: 2rem;
  font-weight: 500;
  letter-spacing: 1.75rem;
  animation: moveInRight 2s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(10rem); }
  80% {
    transform: translateY(-1rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

/*Button*/
.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /*Help with the spacing so it is no longer inline and overlapping with h1. It is treated like text so all we have to do is center text-aling*/
  transition: all .2s;
  position: relative;
  /*Position the pseudo element*/
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-0.3rem);
  /*Moves from top to bottom so need negative value to go above its center position*/
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-0.1rem);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777;
  margin: 6rem;
  border-radius: 10rem; }

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  /*Sets it to the height and width of the parent elements which is the button in this case*/
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /*This will set the pseudo class after the button*/
  transition: all .4s; }

.btn--white::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  /*appear to increase the size*/
  opacity: 0;
  /*Helps to fade out the pseudo element*/ }

.btn--animated {
  animation: moveInBottom 1s ease-out .75s;
  animation-fill-mode: backwards;
  /*Automatically apply the styles of the 0% before the animation starts*/ }
